// Autogenerated code. Do not edit.

// This source code is dual-licensed under the Apache License, version
// 2.0, and the Mozilla Public License, version 1.1.
//
// The APL v2.0:
//
//---------------------------------------------------------------------------
//   Copyright (c) 2007-2016 Pivotal Software, Inc.
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//---------------------------------------------------------------------------
//
// The MPL v1.1:
//
//---------------------------------------------------------------------------
//   The contents of this file are subject to the Mozilla Public License
//   Version 1.1 (the "License"); you may not use this file except in
//   compliance with the License. You may obtain a copy of the License at
//   http://www.rabbitmq.com/mpl.html
//
//   Software distributed under the License is distributed on an "AS IS"
//   basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
//   License for the specific language governing rights and limitations
//   under the License.
//
//   The Original Code is RabbitMQ.
//
//   The Initial Developer of the Original Code is Pivotal Software, Inc.
//   Copyright (c) 2007-2016 Pivotal Software, Inc.  All rights reserved.
//---------------------------------------------------------------------------



namespace RabbitMQ.Client.Framing
{
    public class Constants
    {
        public const int ZERO = 0;
        public const long EmptyFrameSize = 8;
        public static readonly byte[] m_emptyByteArray = new byte[0];

        ///<summary>(= 4096)</summary>
        public const int FrameMinSize = 4096;
        ///<summary>(= 206)</summary>
        public const byte FrameEnd = 206;
        ///<summary>(= 200)</summary>
        public const ushort ReplySuccess = 200;
        ///<summary>(= 311)</summary>
        public const int ContentTooLarge = 311;
        ///<summary>(= 313)</summary>
        public const int NoConsumers = 313;
        ///<summary>(= 320)</summary>
        public const int ConnectionForced = 320;
        ///<summary>(= 402)</summary>
        public const int InvalidPath = 402;
        ///<summary>(= 403)</summary>
        public const ushort AccessRefused = 403;
        ///<summary>(= 404)</summary>
        public const int NotFound = 404;
        ///<summary>(= 405)</summary>
        public const int ResourceLocked = 405;
        ///<summary>(= 406)</summary>
        public const ushort PreconditionFailed = 406;
        ///<summary>(= 501)</summary>
        public const ushort FrameError = 501;
        ///<summary>(= 502)</summary>
        public const ushort SyntaxError = 502;
        ///<summary>(= 503)</summary>
        public const ushort CommandInvalid = 503;
        ///<summary>(= 504)</summary>
        public const ushort ChannelError = 504;
        ///<summary>(= 505)</summary>
        public const int UnexpectedFrame = 505;
        ///<summary>(= 506)</summary>
        public const int ResourceError = 506;
        ///<summary>(= 530)</summary>
        public const int NotAllowed = 530;
        ///<summary>(= 540)</summary>
        public const ushort NotImplemented = 540;
        ///<summary>(= 541)</summary>
        public const ushort InternalError = 541;

        public const byte AMQPFrameBegin = 65;

        public const byte FrameMethod = 1;
        public const byte FrameHeader = 2;
        public const byte FrameBody = 3;
        public const byte FrameHeartbeat = 8;

    }
}
